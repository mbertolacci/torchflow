% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/summarizing-flow.R
\name{nn_summarizing_conditional_flow}
\alias{nn_summarizing_conditional_flow}
\title{Summarizing Conditional Flow}
\usage{
nn_summarizing_conditional_flow(summary_model, flow_model)
}
\arguments{
\item{summary_model}{A \code{\link[torch:nn_module]{torch::nn_module()}} that summarizes the conditioning
input.}

\item{flow_model}{A \code{\link[torch:nn_module]{torch::nn_module()}} that is a conditional flow.}
}
\description{
A summarizing conditional flow is a conditional flow that summarizes the
conditioning input using a summary model. It inherits from
\code{\link[=nn_conditional_flow]{nn_conditional_flow()}}, and it requires a \code{summary_model} and a \code{flow_model}
in its initializer. During the forward pass, the summary model is applied to
the conditioning input, and the result is passed to the flow model. This can
be used to reduce the dimensionality of the conditioning input.
}
\details{
Its \code{forward()} method has an optional \code{summary} argument. If \code{summary} is
provided, it is used as the conditioning input for the flow model, skipping the
application of the summary model. This can be used to speed up the forward
pass if the same conditioning input is used multiple times.

The class also provides a \code{summarize()} method that can be used to compute the
summary of the conditioning input outside of the forward pass.
}
\examples{
library(torch)
summary_model <- nn_sequential(
  nn_linear(10, 5),
  nn_relu()
)
flow_model <- nn_affine_coupling_block(10, 5)
summarizing_flow <- nn_summarizing_conditional_flow(summary_model, flow_model)

}
\seealso{
\code{\link[=nn_conditional_flow]{nn_conditional_flow()}}
}
