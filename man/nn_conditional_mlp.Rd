% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/conditional-network.R
\name{nn_conditional_mlp}
\alias{nn_conditional_mlp}
\title{Conditional Multilayer Perceptron}
\usage{
nn_conditional_mlp(
  input_size,
  conditioning_size,
  output_size,
  layer_sizes = c(128, 128),
  activation = nn_relu
)
}
\arguments{
\item{input_size}{The size of the input to the MLP.}

\item{conditioning_size}{The size of the conditioning input to the MLP.}

\item{output_size}{The size of the output of the MLP.}

\item{layer_sizes}{A vector of integers specifying the number of neurons in each
layer. This can be NULL, in which case a single linear layer is used.}

\item{activation}{The activation function to use after each layer.}
}
\description{
A conditional multilayer perceptron is a multilayer perceptron that takes an
additional conditioning input. It inherits from \code{\link[=nn_conditional]{nn_conditional()}}; it is
not a normalizing flow. In practice, the regular input and the conditioning
input are concatenated and passed through the MLP.
}
\examples{
library(torch)
mlp <- nn_conditional_mlp(10, 5, 1)
input <- torch_randn(10)
conditioning <- torch_randn(5)
output <- mlp(input, conditioning)
}
